{"category":"HSV2RGB","color":"#57b7a7","blocks":["__HSV2RGB_HSV2RGB"],"jscode":"// Block __HSV2RGB_HSV2RGB\nvar __HSV2RGB_HSV2RGB_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"HSV2RGB\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"RGBList\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"RGBList\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Hue\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Hue\"\n        }\n    ],\n    \"message3\": \"%1 %2\",\n    \"args3\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Saturation\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Saturation\"\n        }\n    ],\n    \"message4\": \"%1 %2\",\n    \"args4\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Value\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"Value\"\n        }\n    ],\n    \"colour\": \"#57b7a7\"\n};\n\nwindow['Blockly'].Blocks['__HSV2RGB_HSV2RGB'] = {\n    init: function() {\n        this.jsonInit(__HSV2RGB_HSV2RGB_json);\n    }\n};\n\nwindow['Blockly'].Python['__HSV2RGB_HSV2RGB'] = function(block) {\n    var RGBList = Blockly.Python.valueToCode(block, 'RGBList', Blockly.Python.ORDER_NONE);\nvar Hue = Blockly.Python.valueToCode(block, 'Hue', Blockly.Python.ORDER_NONE);\nvar Saturation = Blockly.Python.valueToCode(block, 'Saturation', Blockly.Python.ORDER_NONE);\nvar Value = Blockly.Python.valueToCode(block, 'Value', Blockly.Python.ORDER_NONE);\n    return `h = float(${Hue}) / 360.0\ns = float(${Saturation}) / 100.0\nv = float(${Value}) / 100.0\n\ni = int(h * 6.0)\nf = (h * 6.0) - i\np = v * (1.0 - s)\nq = v * (1.0 - s * f)\nt = v * (1.0 - s * (1.0 - f))\ni = i % 6\n\nif s == 0.0:\n  ${RGBList} = [v, v, v]\n  pass\nelif i == 0:\n  ${RGBList} = [v, t, p]\n  pass\nelif i == 1:\n  ${RGBList} = [q, v, p]\n  pass\nelif i == 2:\n  ${RGBList} = [p, v, t]\n  pass\nelif i == 3:\n  ${RGBList} = [p, q, v]\n  pass\nelif i == 4:\n  ${RGBList} = [t, p, v]\n  pass\nelif i == 5:\n  ${RGBList} = [v, p, q]\n  pass\n\n${RGBList}[0] = int(${RGBList}[0] * 255)\n${RGBList}[1] = int(${RGBList}[1] * 255)\n${RGBList}[2] = int(${RGBList}[2] * 255)` + \"\\n\";\n};\n\n","code":{"HSV2RGB":["window['Blockly'].Python['__HSV2RGB_HSV2RGB'] = function(block) {\n    var RGBList = Blockly.Python.valueToCode(block, 'RGBList', Blockly.Python.ORDER_NONE);\nvar Hue = Blockly.Python.valueToCode(block, 'Hue', Blockly.Python.ORDER_NONE);\nvar Saturation = Blockly.Python.valueToCode(block, 'Saturation', Blockly.Python.ORDER_NONE);\nvar Value = Blockly.Python.valueToCode(block, 'Value', Blockly.Python.ORDER_NONE);\n    return `h = float(${Hue}) / 360.0\ns = float(${Saturation}) / 100.0\nv = float(${Value}) / 100.0\n\ni = int(h * 6.0)\nf = (h * 6.0) - i\np = v * (1.0 - s)\nq = v * (1.0 - s * f)\nt = v * (1.0 - s * (1.0 - f))\ni = i % 6\n\nif s == 0.0:\n  ${RGBList} = [v, v, v]\n  pass\nelif i == 0:\n  ${RGBList} = [v, t, p]\n  pass\nelif i == 1:\n  ${RGBList} = [q, v, p]\n  pass\nelif i == 2:\n  ${RGBList} = [p, v, t]\n  pass\nelif i == 3:\n  ${RGBList} = [p, q, v]\n  pass\nelif i == 4:\n  ${RGBList} = [t, p, v]\n  pass\nelif i == 5:\n  ${RGBList} = [v, p, q]\n  pass\n\n${RGBList}[0] = int(${RGBList}[0] * 255)\n${RGBList}[1] = int(${RGBList}[1] * 255)\n${RGBList}[2] = int(${RGBList}[2] * 255)` + \"\\n\";\n};\n\n","h = float(${Hue}) / 360.0\ns = float(${Saturation}) / 100.0\nv = float(${Value}) / 100.0\n\ni = int(h * 6.0)\nf = (h * 6.0) - i\np = v * (1.0 - s)\nq = v * (1.0 - s * f)\nt = v * (1.0 - s * (1.0 - f))\ni = i % 6\n\nif s == 0.0:\n  ${RGBList} = [v, v, v]\n  pass\nelif i == 0:\n  ${RGBList} = [v, t, p]\n  pass\nelif i == 1:\n  ${RGBList} = [q, v, p]\n  pass\nelif i == 2:\n  ${RGBList} = [p, v, t]\n  pass\nelif i == 3:\n  ${RGBList} = [p, q, v]\n  pass\nelif i == 4:\n  ${RGBList} = [t, p, v]\n  pass\nelif i == 5:\n  ${RGBList} = [v, p, q]\n  pass\n\n${RGBList}[0] = int(${RGBList}[0] * 255)\n${RGBList}[1] = int(${RGBList}[1] * 255)\n${RGBList}[2] = int(${RGBList}[2] * 255)"]}}